/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const PlaygroundLazyRouteImport = createFileRoute('/playground')()
const DocumentationLazyRouteImport = createFileRoute('/documentation')()
const IndexLazyRouteImport = createFileRoute('/')()

const PlaygroundLazyRoute = PlaygroundLazyRouteImport.update({
  id: '/playground',
  path: '/playground',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/playground.lazy').then((d) => d.Route))
const DocumentationLazyRoute = DocumentationLazyRouteImport.update({
  id: '/documentation',
  path: '/documentation',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/documentation.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/documentation': typeof DocumentationLazyRoute
  '/playground': typeof PlaygroundLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/documentation': typeof DocumentationLazyRoute
  '/playground': typeof PlaygroundLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/documentation': typeof DocumentationLazyRoute
  '/playground': typeof PlaygroundLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/documentation' | '/playground'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/documentation' | '/playground'
  id: '__root__' | '/' | '/documentation' | '/playground'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  DocumentationLazyRoute: typeof DocumentationLazyRoute
  PlaygroundLazyRoute: typeof PlaygroundLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/playground': {
      id: '/playground'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/documentation': {
      id: '/documentation'
      path: '/documentation'
      fullPath: '/documentation'
      preLoaderRoute: typeof DocumentationLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  DocumentationLazyRoute: DocumentationLazyRoute,
  PlaygroundLazyRoute: PlaygroundLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
