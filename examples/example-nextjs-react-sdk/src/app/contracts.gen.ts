// Generated by dojo-bindgen on Thu, 22 Aug 2024 20:04:33 +0000. Do not modify this file manually.
// Import the necessary types from the recs SDK
// generate again with `sozo build --typescript`
import { DojoProvider } from "@dojoengine/core";
import { Account, byteArray } from "starknet";

export type IClient = Awaited<ReturnType<typeof client>>;

export function client(provider: DojoProvider) {
    // System definitions for `dojo_starter-actions` contract
    function actions() {
        const contract_name = "actions";

        // Call the `spawn` system with the specified Account and calldata
        const spawn = async (props: { account: Account }) => {
            try {
                return await provider.execute(
                    props.account,
                    {
                        contractName: contract_name,
                        entrypoint: "spawn",
                        calldata: [],
                    },
                    "dojo_starter"
                );
            } catch (error) {
                console.error("Error executing spawn:", error);
                throw error;
            }
        };

        // Call the `move` system with the specified Account and calldata
        const move = async (props: { account: Account; direction: any }) => {
            try {
                return await provider.execute(
                    props.account,
                    {
                        contractName: contract_name,
                        entrypoint: "move",
                        calldata: [
                            ["None", "Left", "Right", "Up", "Down"].indexOf(
                                props.direction.type
                            ),
                        ],
                    },
                    "dojo_starter"
                );
            } catch (error) {
                console.error("Error executing spawn:", error);
                throw error;
            }
        };

        return {
            spawn,
            move,
        };
    }

    return {
        actions: actions(),
    };
}
