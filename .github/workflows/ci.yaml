name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: oven-sh/setup-bun@v1
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.81.0
      - uses: pnpm/action-setup@v3
        with:
          version: 10.0.0

      - name: Cache turbo
        uses: actions/cache@v3
        with:
          path: |
            .turbo
            **/.turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      # Add Cargo cache for torii-wasm
      - name: Cache Cargo dependencies and build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            packages/torii-wasm/dojo.c/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('packages/torii-wasm/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - run: curl -L https://install.dojoengine.org | bash
      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: "2.9.2"
      - run: /home/runner/.config/.dojo/bin/dojoup -v v1.2.1
      - run: |
          cd worlds/dojo-starter
          /home/runner/.config/.dojo/bin/sozo build
          /home/runner/.config/.dojo/bin/sozo test
      - run: |
          cd worlds/onchain-dash
          /home/runner/.config/.dojo/bin/sozo build
          /home/runner/.config/.dojo/bin/sozo test

      - name: "Setup npm"
        run: |
          npm set @ponderingdemocritus:registry=https://npm.pkg.github.com/dojoengine
          npm set "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}"

      - name: Install Protobuf Compiler
        run: sudo apt-get install -y protobuf-compiler

      - name: Install dependencies
        run: pnpm i

      - name: Run Prettier
        run: pnpm run format:check --ui stream

      - name: Build packages and examples
        run: pnpm run build --ui stream

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v3
      #   env:
      #       CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
